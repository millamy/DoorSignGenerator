@page "/"
@using BlazorSchool.Components.Web.UI
@using BlazorSchool.Components.Web.Variants
@using System.IO
@using System.Text.Json
@using Microsoft.AspNetCore.Hosting
@inject IWebHostEnvironment Environment
@using Microsoft.JSInterop;
@inject IJSRuntime JS
@rendermode InteractiveServer

<PageTitle>Forms</PageTitle>

<BlazorLibrary>
    <div class="positioning">
        <div class="main-page">
            <BlazorCaptureElement Token="Form" class="flex-fill">
                <div class="header">
                    <!-- Logo -->
                    <img src="/logo_uj.png" alt="placeholder" />

                    <!-- Room Number -->
                    <div class="roomNumber" style="margin-bottom: @roomNumberMarginBottom; margin-left: @roomNumberMarginLeft;font-family: @roomNumberFont;">
                        @if (editMode)
                        {
                            <!-- Room Number Styling Controls -->
                            <div class="styling-controls">
                                <label>Color:</label>
                                <input type="color" @bind="roomNumberColor" />

                                <label>Font Size:</label>
                                <input type="text" @bind="roomNumberFontSize" />

                                <label>Font Style:</label>
                                <input type="text" @bind="roomNumberFont" />

                                 <label>Margin Bottom:</label>
                                <input type="text" @bind="roomNumberMarginBottom" />

                                <label>Margin Left:</label>
                                <input type="text" @bind="roomNumberMarginLeft" />
                            </div>

                            <textarea class="roomNumber" rows="1" cols="20"
                                style="color: @roomNumberColor; font-size: @roomNumberFontSize"
                                @bind="@roomNumber"></textarea>
                        }
                        else
                        {
                            <p class="roomNumber" style="color: @roomNumberColor; font-size: @roomNumberFontSize;">
                                @roomNumber</p>
                        }
                    </div>
                </div>



                <!-- Names List Box -->
                <div class="names-container" style="margin-bottom: @namesMarginBottom; margin-left: @namesMarginLeft; font-family: @namesFont;">
                    @if (editMode)
                    {
                        <!-- Names Styling Controls -->
                        <div class="styling-controls">
                            <label>Color:</label>
                            <input type="color" @bind="namesColor" />

                            <label>Font Size:</label>
                            <input type="text" @bind="namesFontSize" />

                            <label>Font Style:</label>
                            <input type="text" @bind="namesFont" />

                            <label>Margin Bottom:</label>
                            <input type="text" @bind="namesMarginBottom" />

                            <label>Margin Left:</label>
                            <input type="text" @bind="namesMarginLeft" />
                        </div>

                        <textarea class="names" rows="4" cols="25" style="color: @namesColor; font-size: @namesFontSize;"
                            @bind="@peopleNames"></textarea>
                    }
                    else
                    {
                        @foreach (var name in peopleNames.Split('\n'))
                        {
                            <p class="names" style="color: @namesColor; font-size: @namesFontSize">@name</p>
                        }
                    }
                </div>




            </BlazorCaptureElement>
        </div>

        <div class="grid">

            <Button Color="ButtonColor.Secondary" Size="Size.Large" @onclick="OnShowRoomNumberClick"> Numer Sali </Button>
            <Button Color="ButtonColor.Secondary" Size="Size.Large" @onclick="OnShowNamesClick"> Osoby </Button>
            <Button Color="ButtonColor.Secondary" Size="Size.Large" @onclick="OnShowLoadClick"> Wczytaj </Button>
            <Button Color="ButtonColor.Secondary" Size="Size.Large" @onclick="@(() => { editMode = true; })"> Edytuj
            </Button>
            <Button Color="ButtonColor.Secondary" Size="Size.Large" @onclick="SaveAsJson"> Zapisz do JSONA </Button>

            @if (editMode)
            {
                <Button Color="ButtonColor.Secondary" Size="Size.Large" @onclick="@(() => { editMode = false; })"> Zapisz
                    zmiany </Button>
            }


        </div>
    </div>

</BlazorLibrary>



<Modal @ref="RoomNumber" title="Numer Sali" IsVerticallyCentered="true">
    <BodyTemplate>
        <input type="text" @bind="roomNumber" />
    </BodyTemplate>
    <FooterTemplate>
    </FooterTemplate>
</Modal>

<Modal @ref="People" title="Osoby" IsVerticallyCentered="true">
    <BodyTemplate>
        <textarea @bind="peopleNames" rows="5"></textarea>
    </BodyTemplate>
    <FooterTemplate>
    </FooterTemplate>
</Modal>


<Modal @ref="Load" title="Wczytaj" IsVerticallyCentered="true">
    <BodyTemplate>
        <InputFile OnChange="@LoadFiles" multiple />
    </BodyTemplate>
    <FooterTemplate>
    </FooterTemplate>
</Modal>

@code {
    private Modal RoomNumber = default!;
    private Modal People = default!;
    private Modal Load = default!;
    private string roomNumber;
    private ElementReference Img;
    private IBrowserFile loadedFile;
    private long maxFileSize = 1024 * 15;
    private int maxAllowedFiles = 3;
    private bool isLoading;
    private string peopleNames = "";
    private bool editMode = false;
    private string roomNumberColor = "black";
    private string roomNumberFontSize = "95px";

    private string roomNumberFont = "Arial";

    private string namesColor = "black";
    private string namesFontSize = "70px";
     private string namesFont = "Arial";

     private string namesMarginBottom ="20px";
     private string namesMarginLeft = "200px";

     private string roomNumberMarginBottom ="-25px";
     private string roomNumberMarginLeft = "0px";

    private Info info;

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        loadedFile = e.File;

        using (var stream = loadedFile.OpenReadStream())
        {
            var options = new JsonSerializerOptions
                {
                    PropertyNameCaseInsensitive = true
                };

            info = await JsonSerializer.DeserializeAsync<Info>(stream, options);
            peopleNames = info.Names;
            roomNumber = info.RoomNumber;
        }
    }
    private async Task SaveAsJson()
    {
        Info data = new Info();
        data.RoomNumber = roomNumber;
        data.Names = peopleNames;
        var json = System.Text.Json.JsonSerializer.Serialize(data);

        var jsRuntime = JS;

        await jsRuntime.InvokeVoidAsync("saveAsFile", "data.json", json, "application/json");

    }

    private async Task OnShowRoomNumberClick()
    {
        await RoomNumber.ShowAsync();
    }

    private async Task OnShowNamesClick()
    {
        await People.ShowAsync();
    }

    private async Task OnShowLoadClick()
    {
        await Load.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await RoomNumber.HideAsync();
        await People.HideAsync();
        await Load.HideAsync();
    }

}